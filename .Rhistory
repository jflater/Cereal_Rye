# Add dodged text labels that include the plot number and the cumulative flow value
plot + geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1,
size = 4) +
viridis::scale_color_viridis(discrete = TRUE, option = "C") +
theme_pubr()
# Create the base plot without the legend
plot <- ggplot(df_may_cum, aes(x = date, y = cum_flow, color = plot)) +
geom_line() +
labs(title = "Cumulative Flow Over Time",
x = "Date",
y = "Cumulative Flow") +
theme_pubr() +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Add dodged text labels that include the plot number and the cumulative flow value
plot + geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1,
size = 4) +
viridis::scale_color_viridis(discrete = TRUE, option = "C")
# Add dodged text labels that include the plot number and the cumulative flow value
plot + geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1,
size = 4) +
viridis::scale_color_viridis(discrete = TRUE, option = "E")
# Create the base plot without the legend
plot <- ggplot(df_may_cum, aes(x = date, y = cum_flow)) +
geom_line() +
labs(title = "Cumulative Flow Over Time",
x = "Date",
y = "Cumulative Flow") +
theme_pubr() +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Add dodged text labels that include the plot number and the cumulative flow value
plot + geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1,
size = 4)
# Create the base plot without the legend
plot <- ggplot(df_may_cum, aes(x = date, y = cum_flow, group = plot)) +
geom_line() +
labs(title = "Cumulative Flow Over Time",
x = "Date",
y = "Cumulative Flow") +
theme_pubr() +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Add dodged text labels that include the plot number and the cumulative flow value
plot + geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1,
size = 4)
# Load necessary libraries
library(tidyverse)
library(lubridate)
library(zoo)
library(ggrepel)
library(ggpubr)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp)) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Plot overall flow (1-week breaks)
p1 <- ggplot(df, aes(x = date, y = flow, color = plot)) +
geom_line() +
labs(title = "Flow over time", x = "Date", y = "Flow", color = "Plot") +
scale_x_date(date_breaks = "1 week", date_labels = "%Y-%m-%d") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p1)
# Filter data for May 2024 and plot (1-day breaks)
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
p2 <- ggplot(df_may, aes(x = date, y = flow, color = plot)) +
geom_line() +
labs(title = "Flow over time (May 2024)", x = "Date", y = "Flow", color = "Plot") +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p2)
# Calculate cumulative flow for May 2024 by plot
df_may_cum <- df_may %>%
group_by(plot) %>%
arrange(date) %>%
mutate(cum_flow = cumsum(flow)) %>%
ungroup()
df_may_final <- df_may_cum %>%
group_by(plot) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup()
# Base cumulative flow plot with dodged text labels using ggrepel
p3 <- ggplot(df_may_cum, aes(x = date, y = cum_flow, group = plot)) +
geom_line(aes(color = plot)) +
labs(title = "Cumulative Flow Over Time (May 2024)", x = "Date", y = "Cumulative Flow") +
scale_x_date(date_breaks = "1 day", date_labels = "%Y-%m-%d") +
theme_pubr() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
geom_text_repel(data = df_may_final,
aes(label = paste("Plot", plot, ":", round(cum_flow, 1))),
nudge_x = 0.1, nudge_y = 0.1, size = 4)
print(p3)
# Create a data frame with weekly flow (grouped by ISO week and year)
weekly_flow <- df %>%
mutate(year = year(date),
week = isoweek(date)) %>%
group_by(year, week, plot) %>%
summarise(weekly_flow = sum(flow, na.rm = TRUE), .groups = "drop") %>%
arrange(year, week, plot)
print(head(weekly_flow))
# Load required libraries
library(tidyverse)
library(lubridate)
library(zoo)
library(ggrepel)
library(viridis)
library(patchwork)
# Read and reshape the data (same as before)
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp)) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
# Calculate cumulative flow for May per plot
df_may_cum <- df_may %>%
group_by(plot) %>%
arrange(date) %>%
mutate(cum_flow = cumsum(flow)) %>%
ungroup()
df_may_final <- df_may_cum %>%
group_by(plot) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup()
# Panel 1: Heatmap of daily flow in May 2024
p_heat <- ggplot(df_may, aes(x = date, y = plot, fill = flow)) +
geom_tile(color = "white") +
scale_fill_viridis(option = "viridis", name = "Daily Flow") +
labs(title = "Daily Flow Heatmap (May 2024)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Panel 2: Cumulative flow line plot with final values annotated
p_line <- ggplot(df_may_cum, aes(x = date, y = cum_flow, color = plot)) +
geom_line(size = 1) +
geom_point(data = df_may_final, size = 3) +
labs(title = "Cumulative Flow Over Time (May 2024)",
x = "Date", y = "Cumulative Flow") +
scale_x_date(date_breaks = "1 day", date_labels = "%b %d") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# Combine the two panels vertically
combined_plot <- p_heat / p_line +
plot_layout(heights = c(1, 2)) +
plot_annotation(title = "Creative Visualization of Water Flow Data (May 2024)",
subtitle = "Top: Daily Flow Heatmap; Bottom: Cumulative Flow Trend by Plot")
# Display the combined plot
print(combined_plot)
# Load required libraries
library(tidyverse)
library(lubridate)
library(zoo)
library(ggrepel)
library(viridis)
library(patchwork)
library(ggpubr)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp)) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(
plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp, format = "%Y-%m-%d %H:%M:%S")
) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(
plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp, format = "%Y-%m-%d %H:%M:%S")
) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
View(df)
View(df)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(
plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp, format = "%Y-%m-%d %H:%M:%S")
) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% filter(year(date) == 2024, month(date) == 5)
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% dplyr::filter(year(date) == 2024, month(date) == 5)
df_may_cum <- df_may %>%
group_by(plot) %>%
arrange(date) %>%
mutate(cum_flow = cumsum(flow)) %>%
ungroup()
df_may_final <- df_may_cum %>%
group_by(plot) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup()
df_may_cum <- df_may %>%
group_by(plot) %>%
arrange(date) %>%
mutate(cum_flow = cumsum(flow)) %>%
ungroup()
df_may_final <- df_may_cum %>%
group_by(plot) %>%
dplyr::filter(date == max(date, na.rm = TRUE)) %>%
ungroup()
# Panel 1: Heatmap of daily flow in May 2024
p_heat <- ggplot(df_may, aes(x = date, y = plot, fill = flow)) +
geom_tile(color = "white") +
scale_fill_viridis(option = "viridis", name = "Daily Flow") +
labs(title = "Daily Flow Heatmap (May 2024)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Panel 2: Cumulative flow line plot with repelled plot labels
p_line <- ggplot(df_may_cum, aes(x = date, y = cum_flow, color = plot)) +
geom_line(size = 1) +
geom_point(data = df_may_final, size = 3) +
geom_text_repel(data = df_may_final, aes(label = plot),
nudge_x = 0.2, nudge_y = 0, size = 4, show.legend = FALSE) +
labs(title = "Cumulative Flow Over Time (May 2024)",
x = "Date", y = "Cumulative Flow") +
scale_x_date(date_breaks = "1 day", date_labels = "%b %d") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# Combine panels vertically
combined_plot <- p_heat / p_line +
plot_layout(heights = c(1, 2)) +
plot_annotation(title = "Creative Visualization of Water Flow Data (May 2024)",
subtitle = "Top: Daily Flow Heatmap; Bottom: Cumulative Flow with Plot Labels")
# Display the composite plot
print(combined_plot)
# Load required libraries
library(tidyverse)
library(lubridate)
library(zoo)
library(ggrepel)
library(viridis)
library(patchwork)
library(ggpubr)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(
plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp, format = "%Y-%m-%d %H:%M:%S")
) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
# Filter May 2024 data and compute cumulative flow per plot
df_may <- df %>% dplyr::filter(year(date) == 2024, month(date) == 5)
df_may_cum <- df_may %>%
group_by(plot) %>%
arrange(date) %>%
mutate(cum_flow = cumsum(flow)) %>%
ungroup()
df_may_final <- df_may_cum %>%
group_by(plot) %>%
dplyr::filter(date == max(date, na.rm = TRUE)) %>%
ungroup()
# Panel 1: Heatmap of daily flow in May 2024
p_heat <- ggplot(df_may, aes(x = date, y = plot, fill = flow)) +
geom_tile(color = "white") +
scale_fill_viridis(option = "viridis", name = "Daily Flow") +
labs(title = "Daily Flow Heatmap (May 2024)",
x = "Date") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Panel 2: Cumulative flow line plot with repelled plot labels
p_line <- ggplot(df_may_cum, aes(x = date, y = cum_flow, color = plot)) +
geom_line(size = 1) +
geom_point(data = df_may_final, size = 3) +
geom_text_repel(data = df_may_final, aes(label = plot),
nudge_x = 0.2, nudge_y = 0, size = 4, show.legend = FALSE) +
labs(title = "Cumulative Flow Over Time (May 2024)",
x = "Date", y = "Cumulative Flow") +
scale_x_date(date_breaks = "1 day", date_labels = "%b %d") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# Combine panels vertically
combined_plot <- p_heat / p_line +
plot_layout(heights = c(1, 2))
# Display the composite plot
print(combined_plot)
# Create a data frame with weekly flow for each plot
weekly_flow <- df %>%
mutate(year = year(date),
week = isoweek(date)) %>%
group_by(year, week, plot) %>%
summarise(weekly_flow = sum(flow, na.rm = TRUE), .groups = "drop") %>%
arrange(year, week, plot)
print(head(weekly_flow))
# Panel 2: Cumulative flow line plot with repelled plot labels
p_line <- ggplot(df_may_cum, aes(x = date, y = cum_flow, color = plot)) +
geom_line(size = 1) +
geom_point(data = df_may_final, size = 3) +
geom_text_repel(data = df_may_final, aes(label = plot),
nudge_x = 0.2, nudge_y = 0, size = 4, show.legend = FALSE) +
labs(title = "Cumulative Flow Over Time (May 2024)",
x = "Date", y = "Cumulative Flow") +
scale_x_date(date_breaks = "1 day", date_labels = "%b %d") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Combine panels vertically
combined_plot <- p_heat / p_line +
plot_layout(heights = c(1, 2))
# Display the composite plot
print(combined_plot)
df <- tibble(
plot = factor(rep(1:15, levels = 1:15)))
building_df <- tibble(
plot = factor(str_pad(1:15, 2, pad = "0")))
# Make a data frame with growing season and treatment for each plot.
library(tidyverse)
library(lubridate)
date_range <- seq(ymd("2023-01-01"), ymd("2025-01-01"), by = "day")
df <- expand_grid(date = date_range, plot = plot_ids)
df <- expand_grid(date = date_range, plot = plot_ids)
plot_ids <- factor(str_pad(1:15, width = 2, pad = "0"))
date_range <- seq(ymd("2023-01-01"), ymd("2025-01-01"), by = "day")
df <- expand_grid(date = date_range, plot = plot_ids)
# Make a data frame with growing season and treatment for each plot.
library(tidyverse)
library(lubridate)
plot_ids <- factor(str_pad(1:15, width = 2, pad = "0"))
date_range <- seq(ymd("2023-01-01"), ymd("2025-01-01"), by = "day")
df <- expand_grid(date = date_range, plot = plot_ids) %>%
mutate(growing_season = case_when(
date >= ymd("2023-04-01") & date <= ymd("2024-01-01") ~ "2023",
date >= ymd("2024-04-01") & date <= ymd("2025-04-01") ~ "2024",
TRUE ~ "2022"
))
# Make a data frame with growing season and treatment for each plot.
library(tidyverse)
library(lubridate)
plot_ids <- factor(str_pad(1:15, width = 2, pad = "0"))
date_range <- seq(ymd("2023-01-01"), ymd("2025-01-01"), by = "day")
df <- expand_grid(date = date_range, plot = plot_ids) %>%
mutate(growing_season = case_when(
date >= ymd("2023-04-01") & date <= ymd("2024-01-01") ~ "2023",
date >= ymd("2024-04-01") & date <= ymd("2025-04-01") ~ "2024",
TRUE ~ "2022"
))
View(df)
# Make a data frame with growing season and treatment for each plot.
library(tidyverse)
library(lubridate)
plot_ids <- factor(str_pad(1:15, width = 2, pad = "0"))
date_range <- seq(ymd("2023-01-01"), ymd("2025-01-01"), by = "day")
df <- expand_grid(date = date_range, plot = plot_ids) %>%
mutate(growing_season = case_when(
date >= ymd("2023-04-01") & date <= ymd("2024-01-01") ~ "2023",
date >= ymd("2024-04-01") & date <= ymd("2025-04-01") ~ "2024",
TRUE ~ "2022"
))
df <- df %>%
mutate(
treatment = case_when(
growing_season == "2023" ~ case_when(
plot %in% c(01, 08, 11, 14) ~ "Corn",
plot %in% c(02, 03, 05, 15) ~ "Sorghum",
plot %in% c(07, 09, 12, 13) ~ "Sorghum + Rye",
TRUE ~ "Soy"
),
growing_season == "2024" ~ case_when(
plot %in% c(01, 08, 11, 14) ~ "Soy",
plot %in% c(02, 03, 05, 15) ~ "Sorghum",
plot %in% c(07, 09, 12, 13) ~ "Sorghum + Rye",
TRUE ~ "Corn"
),
TRUE ~ "Soy"
)
)
View(df)
write_csv(df, "data/plot_treatments.csv")
View(df)
# Load required libraries
library(tidyverse)
library(lubridate)
library(zoo)
library(ggrepel)
library(viridis)
library(patchwork)
library(ggpubr)
# Read and reshape the data
df <- read_csv("data/processed/Logger_Combined_Data23to24.csv") %>%
pivot_longer(cols = starts_with("plot_"),
names_to = "plot",
values_to = "flow") %>%
mutate(
plot = as.factor(str_remove(plot, "plot_")),
date = as.Date(timestamp, format = "%Y-%m-%d %H:%M:%S")
) %>%
group_by(date, plot) %>%
summarise(flow = sum(flow, na.rm = TRUE), .groups = "drop")
View(df)
View(df)
View(df)
plot_treatments <- read_csv("data/meta/plot_treatments.csv")
# Join df to plot_treatments by date and plot
df_treatments <- df %>%
left_join(plot_treatments, by = c("plot", "date"))
View(df_treatments)
?left_join()
# Join df to plot_treatments by date and plot
df_treatments <- df %>%
left_join(plot_treatments, by = c("plot", "date"), unmatched = "drop")
# Join df to plot_treatments by date and plot
df_treatments <- df %>%
left_join(plot_treatments, by = c("plot", "date"), unmatched = "drop")
View(plot_treatments)
View(df_treatments)
# Join df to plot_treatments by date and plot
df_treatments <- df %>%
left_join(plot_treatments, by = c("plot", "date")) %>%
drop_na()
# Panel 3: Boxplot of weekly flow by treatment
p_box <- ggplot(df_treatments, aes(x = treatment, y = weekly_flow, fill = treatment)) +
geom_boxplot() +
labs(title = "Weekly Flow by Treatment",
x = "Treatment", y = "Weekly Flow") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_box
View(plot_treatments)
View(df_treatments)
View(plot_treatments)
View(df_treatments)
#ggpubr boxplot of flow by treatment
p_box <- ggboxplot(df_treatments, x = "treatment", y = "flow",
color = "treatment", palette = "jco",
add = "jitter", facet.by = "plot",
xlab = "Treatment", ylab = "Flow",
title = "Flow by Treatment and Plot",
ggtheme = theme_minimal())
print(p_box)
#ggpubr boxplot of flow by treatment
p_box <- ggboxplot(df_treatments, x = "treatment", y = "flow",
color = "treatment", palette = "jco",
add = "jitter",
xlab = "Treatment", ylab = "Flow",
title = "Flow by Treatment and Plot",
ggtheme = theme_minimal())
print(p_box)
#ggpubr boxplot of flow by treatment
p_box <- ggdensity(df_treatments, x = "treatment", y = "flow",
color = "treatment", palette = "jco",
add = "jitter",
xlab = "Treatment", ylab = "Flow",
title = "Flow by Treatment and Plot",
ggtheme = theme_minimal())
#ggpubr boxplot of flow by treatment
p_box <- ggboxplot(df_treatments, x = "treatment", y = "flow",
color = "treatment", palette = "jco",
add = "jitter",
xlab = "Treatment", ylab = "Flow",
title = "Flow by Treatment and Plot",
ggtheme = theme_minimal())
print(p_box)
# Add mean line
# Add mean line
p_box_mean <- p_box + stat_summary(fun = mean, geom = "point", shape = 18, size = 3, color = "red")
print(p_box_mean)
