geom_bar(stat = "identity", color = "black", width = 0.7) +
geom_errorbar(aes(ymin = mean_biomass - ci, ymax = mean_biomass + ci),
width = 0.2, color = "black") +
labs(x = "Treatment", y = expression("Average Biomass (Mg ha"^-1*")")) +
scale_fill_manual(values = treatment_colors) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 14),
axis.title = element_text(size = 16))
ggsave("figures/sorghum_biomass_2023.png", width = 8, height = 6, dpi = 300)
# Plot with 95% CI error bars, using custom colors
ggplot(biomass_summary, aes(x = Treatment, y = mean_biomass, fill = Treatment)) +
geom_bar(stat = "identity", color = "black", width = 0.7) +
geom_errorbar(aes(ymin = mean_biomass - ci, ymax = mean_biomass + ci),
width = 0.2, color = "black") +
labs(x = "Treatment", y = expression("Average Biomass 2023 (Mg ha"^-1*")")) +
scale_fill_manual(values = treatment_colors) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 14),
axis.title = element_text(size = 16))
ggsave("figures/sorghum_biomass_2023.png", width = 8, height = 6, dpi = 300)
library(readxl)
soils_23 <- read_xls("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
soils_23 <- read_xls("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
library(readxl)
X2024_SABR_MASTER_soil <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
View(X2024_SABR_MASTER_soil)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
rm(X2024_SABR_MASTER_soil)
colnames(soils_23)
soils_23 %>%
soils_23 %>%
filter(lab_id == starts_with("2024"))
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
soils_23 %>%
filter(lab_id == starts_with("2024"))
soils_23 %>%
dplyr::filter(lab_id == starts_with("2024"))
soils_23 %>%
dplyr::filter(lab_id == starts_with(c("2024")))
soils_23 %>%
dplyr::filter(starts_with(lab_id, "2024"))
glimpse(soils_23)
soils_23 %>%
filter(str_sub(lab_id, 1, 4) == "2024")
soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024")
soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_")
soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(date = as.Date(date),
plot = as.numeric(plot))
soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(date = as.Date(date),
plot = as.numeric(plot))
soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
soils_23 <- soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
library(tidyverse)
colnames(soils_23)
soils_23 <- soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
View(soils_23)
View(biomass_summary)
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
library(readxl)
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage")
View(sorg_biomass_24)
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`))
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`))
View(sorg_biomass_24)
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`)) %>%
select(Date, Plot, `Net Weight (t)`, total_biomass)
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`)) %>%
select(Date, Plot, `Net Weight (t)`, total_biomass)
View(sorg_biomass_24)
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`)) %>%
select(Date, Plot, total_biomass) %>%
distinct()
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`)) %>%
select(Date, Plot, total_biomass) %>%
distinct()
View(sorg_biomass_24)
# Figure of total_biomass by Plot
sorg_biomass_24 %>%
ggplot(aes(x = Plot, y = total_biomass)) +
geom_bar(stat = "identity") +
labs(x = "Plot", y = "Total Biomass (tons)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Figure of total_biomass by Plot
sorg_biomass_24 %>%
ggplot(aes(x = Plot, y = total_biomass)) +
geom_bar(stat = "identity") +
labs(x = "Plot", y = "Total Biomass (tons)")
str(sorg_biomass_24)
# 2024
sorg_biomass_24 <- read_excel("C:/Users/jflater/Box/CABBI/Data/MeasuredData/SABR/SmallDrainagePlots/Biomass/2024GrowingSeason/RecordingDataSheets/sorg_chopper_harvest_load_weights.xlsx")
sorg_biomass_24 <- sorg_biomass_24 %>%
dplyr::filter(Study == "Drainage") %>%
group_by(Plot) %>%
mutate(total_biomass = sum(`Net Weight (t)`)) %>%
select(Date, Plot, total_biomass) %>%
distinct() %>%
mutate(treatment = case_when(
Plot %in% c("2", "3", "5", "15") ~ "No cover",
TRUE ~ "Cover",
))
View(sorg_biomass_24)
# Figure of total_biomass by Plot
sorg_biomass_24 %>%
ggplot(aes(x = Plot, y = total_biomass, fill = treatment)) +
geom_bar(stat = "identity") +
labs(x = "Plot", y = "Total Biomass (tons)")
biomass_summary <- sorg_biomass_24 %>%
group_by(treatment) %>%
summarise(
# Convert US tons to metric tons and divide by plot size (ha)
mean_biomass = mean((total_biomass * conversion_factor) / plot_size_ha),
sd_biomass   = sd((total_biomass * conversion_factor) / plot_size_ha),
n = n(),
se_biomass   = sd_biomass / sqrt(n()),
ci = qt(0.975, df = n - 1) * se_biomass,
.groups = "drop"
)
plot_size_ha <- 0.145
conversion_factor <- 0.907185  # 1 US ton = 0.907185 metric tons (or megagrams)
biomass_summary <- sorg_biomass_24 %>%
group_by(treatment) %>%
summarise(
# Convert US tons to metric tons and divide by plot size (ha)
mean_biomass = mean((total_biomass * conversion_factor) / plot_size_ha),
sd_biomass   = sd((total_biomass * conversion_factor) / plot_size_ha),
n = n(),
se_biomass   = sd_biomass / sqrt(n()),
ci = qt(0.975, df = n - 1) * se_biomass,
.groups = "drop"
)
# Custom color palette (matching your function earlier)
treatment_colors <- c(
"No cover" = "#D2B48C",
"Cover" = "#8B4513"
)
# Plot with 95% CI error bars, using custom colors
ggplot(biomass_summary, aes(x = Treatment, y = mean_biomass, fill = Treatment)) +
geom_bar(stat = "identity", color = "black", width = 0.7) +
geom_errorbar(aes(ymin = mean_biomass - ci, ymax = mean_biomass + ci),
width = 0.2, color = "black") +
labs(x = "Treatment", y = expression("Average Biomass 2023 (Mg ha"^-1*")")) +
scale_fill_manual(values = treatment_colors) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 14),
axis.title = element_text(size = 16))
# Plot with 95% CI error bars, using custom colors
ggplot(biomass_summary, aes(x = treatment, y = mean_biomass, fill = treatment)) +
geom_bar(stat = "identity", color = "black", width = 0.7) +
geom_errorbar(aes(ymin = mean_biomass - ci, ymax = mean_biomass + ci),
width = 0.2, color = "black") +
labs(x = "Treatment", y = expression("Average Biomass 2023 (Mg ha"^-1*")")) +
scale_fill_manual(values = treatment_colors) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 14),
axis.title = element_text(size = 16))
ggsave("figures/sorghum_biomass_2024.png", width = 8, height = 6, dpi = 300)
library(readxl)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
library(tidyverse)
colnames(soils_23)
soils_23 <- soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
View(soils_23)
View(soils_23)
View(soils_23)
library(readxl)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2023/2023_SABR_MASTER_soil.xlsx")
soils_24 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
library(tidyverse)
soils_23 <- soils_23 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
soils_24 <- soils_24 %>%
dplyr::filter(str_sub(lab_id, 1, 4) == "2024") %>%
separate(lab_id, into = c("date", "plot"), sep = "_") %>%
mutate(as.Date(as.character(date), format = "%Y%m%d"),
plot = as.numeric(plot))
soils_24 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
view(soils_23)
gc()
library(readxl)
library(tidyverse)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2023/2023_SABR_MASTER_soil.xlsx")
soils_24 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2024/2024_SABR_MASTER_soil.xlsx")
soils_23 %>%
select(-starts_with("..."))
library(janitor)
soils_23 %>%
select(-starts_with("...")) %>%
clean_names()
View(soils_23)
soils_23 %>%
select(-starts_with("...")) %>%
filter(!`Project/sampling` == "N2O-methods") %>%
clean_names()
colnames(soils_23)
soils_23 %>%
select(-starts_with("...")) %>%
filter(!`Project/sampling` == c("N2O-methods")) %>%
clean_names()
soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == c("N2O-methods")) %>%
clean_names()
soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names()
View(soils_23)
soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(plot = plot_id)
writeClipboard(soils_23$`Plot ID`)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2023/2023_SABR_MASTER_soil.xlsx")
soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "p\\d+"),
str_extract(plot_id, "(?<=p)\\d+"),
plot_id
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "p\\d+"),
str_extract(plot_id, "(?<=p)\\d+"),
plot_id
)
)
View(df)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
separate(plot_id, into = c("sampling_number", "plot", "row_location", "rep"), sep = "-") %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot, "^(p|r)\\d+"),
str_extract(plot, "(?<=p|r)\\d+"),
plot
)
)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2023/2023_SABR_MASTER_soil.xlsx")
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot_id, "^(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot
) %>%
separate(plot_id, into = c("sampling_number", "plot", "row_location", "rep"), sep = "-")
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names()
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot_id, "^(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot_id, "^(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot
)
)
soils_23 <- read_excel("C:/Users/jflater/Box/McDaniel Lab 2.0/Projects/SABR_Soils_Flater/2023/2023_SABR_MASTER_soil.xlsx")
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot_id, "^(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
# If the plot column starts with "p" or "r" followed by numbers,
# extract only the numeric part. Otherwise, keep it as is.
plot = if_else(
str_detect(plot_id, "^(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
~ plot
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "p\\d+"),
str_extract(plot_id, "(?<=p)\\d+"),
plot_id
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot_id
)
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot_id
)
) %>%
separate(plot_id, into = c("sampling_number", "plot", "row_location", "rep"), sep = "-")
View(soils_23)
colnames(soils_23)
colnames(df)
# plot nitrate_ppm and ammonia_ppm by project_sampling
df %>%
pivot_longer(
cols = c(nitrate_ppm, ammonia_ppm),
names_to = "nitrate_ammonia",
values_to = "ppm"
)
# plot nitrate_ppm and ammonia_ppm by project_sampling
df %>%
mutate(nitrate_ppm = as.numeric(nitrate_ppm),
ammonia_ppm = as.numeric(ammonia_ppm)) %>%
pivot_longer(
cols = c(nitrate_ppm, ammonia_ppm),
names_to = "nitrate_ammonia",
values_to = "ppm"
)
# plot nitrate_ppm and ammonia_ppm by project_sampling
df %>%
mutate(nitrate = as.numeric(nitrate_ppm),
ammonia = as.numeric(ammonia_ppm)) %>%
pivot_longer(
cols = c(nitrate, ammonia),
names_to = "inorganic_n",
values_to = "ppm"
)
df <- soils_23 %>%
select(-starts_with("...")) %>%
dplyr::filter(!`Project/sampling` == "N2O-methods") %>%
clean_names() %>%
mutate(
plot_clean = if_else(
str_detect(plot_id, "(p|r)\\d+"),
str_extract(plot_id, "(?<=p|r)\\d+"),
plot_id
)
) %>%
separate(plot_id, into = c("sampling_number", "plot", "row_location", "rep"), sep = "-") %>%
mutate(nitrate = as.numeric(nitrate_ppm),
ammonia = as.numeric(ammonia_ppm)) %>%
pivot_longer(
cols = c(nitrate, ammonia),
names_to = "inorganic_n",
values_to = "ppm"
)
View(df)
# dotplot of inorganic_n by plot
df %>%
ggplot(aes(x = plot, y = ppm, color = inorganic_n)) +
geom_point() +
facet_wrap(~ sampling_number) +
theme_bw() +
labs(
x = "Plot",
y = "ppm",
title = "Inorganic N by Plot"
)
# dotplot of inorganic_n by plot
df %>%
ggplot(aes(x = plot, y = ppm, color = inorganic_n)) +
geom_point() +
facet_wrap(~ project_sampling) +
theme_bw() +
labs(
x = "Plot",
y = "ppm",
title = "Inorganic N by Plot"
)
# dotplot of inorganic_n by plot
df %>%
ggplot(aes(x = plot_clean, y = ppm, color = inorganic_n)) +
geom_point() +
facet_wrap(~ project_sampling) +
theme_bw() +
labs(
x = "Plot",
y = "ppm",
title = "Inorganic N by Plot"
)
# dotplot of inorganic_n by plot
df %>%
dplyr::filter(!plot_clean %in% c("NE", "NW", "SE", "SW")) %>%
ggplot(aes(x = plot_clean, y = ppm, color = inorganic_n)) +
geom_point() +
facet_wrap(~ project_sampling) +
theme_bw() +
labs(
x = "Plot",
y = "ppm",
title = "Inorganic N by Plot"
)
